{"version":3,"sources":["components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/home-page.js","components/pages/card-page.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["BookListItem","book","onAddedToCart","title","author","price","coverImage","className","src","alt","href","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","ErrorIndicator","compose","funcs","comp","reduceRight","wrapped","f","Spinner","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","connect","bookList","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","total","orderTotal","item","idx","count","HomePage","CartPage","ShopHeader","numItems","to","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.057eca66.chunk.js","sourcesContent":["import BookListItem from './book-list-item';\n\nexport default BookListItem;","import React from \"react\";\n\nconst BookListItem = ({ book, onAddedToCart }) => {\n  const { title, author, price, coverImage } = book;\n  return (\n    <div className=\"book-list-item\">\n      <div className=\"book-cover \">\n        <img src={coverImage} alt=\"cover\" />\n      </div>\n      <div className=\"book-details\">\n        <a href=\"#\" className=\"book-title\">\n          {title}\n        </a>\n        <div className=\"book-author\">{author}</div>\n        <div className=\"book-price\">${price}</div>\n        <button\n        onClick={onAddedToCart}\n        className=\"btn btn-info add-to-cart\">Add to cart</button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookListItem;\n","import React from 'react';\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer\n} = React.createContext();\n\nexport {\n  BookstoreServiceProvider,\n  BookstoreServiceConsumer\n};\n","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\nconst withBookstoreService = () => (Wrapped) => {\n\n  return (props) => {\n    return (\n      <BookstoreServiceConsumer>\n        {\n          (bookstoreService) => {\n            return (<Wrapped {...props}\n                     bookstoreService={bookstoreService}/>);\n          }\n        }\n      </BookstoreServiceConsumer>\n    );\n  }\n};\n\nexport default withBookstoreService;\n","const booksRequested = () => {\n    return {\n        type: 'FETCH_BOOKS_REQUESTED'\n    }\n};\n\nconst booksLoaded = (newBooks) => {\n    return {\n        type: 'FETCH_BOOKS_SUCCESS',\n        payload: newBooks\n    }\n};\n\nconst booksError = (error) => {\n    return {\n        type: 'FETCH_BOOKS_FAILURE',\n        payload: error,\n    }\n};\n\nexport const bookAddedToCart = (bookId) => {\n    return {\n        type: 'BOOK_ADDED_TO_CART',\n        payload: bookId\n    }\n}\n\nexport const bookRemovedFromCart = (bookId) => {\n    return {\n        type: 'BOOK_REMOVED_FROM_CART',\n        payload: bookId\n    }\n}\n\nexport const AllBooksRemovedFromCart = (bookId) => {\n    return {\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\n        payload: bookId\n    }\n}\n\nconst fetchBooks = (bookstoreService, dispatch) => () => {\n    dispatch(booksRequested());\n    bookstoreService.getBooks()\n      .then((data) => dispatch(booksLoaded(data)))\n      .catch((err) => dispatch(booksError(err)));\n};\n\nexport {\n    fetchBooks\n};\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n return(\n     <div>ErrorIndicator</div>\n )\n}\n\nexport default ErrorIndicator;","const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight(\n        (wrapped, f) => f(wrapped), comp);\n}\n\nexport default compose;","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return(\n        <div>loading...</div>\n    )\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { connect } from 'react-redux';\n\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport ErrorIndicator from '../error-indicator';\nimport { compose } from '../../utils';\nimport Spinner from '../spinner';\nimport './book-list.css';\n\nconst BookList = ({ books, onAddedToCart }) => {\n  return (\n    <ul className=\"book-list\">\n      {\n        books.map((book) => {\n          return (\n            <li key={book.id}>\n              <BookListItem book={book}\n              onAddedToCart={() => onAddedToCart(book.id)}\n              />\n              </li>\n          )\n        })\n      }\n    </ul>\n  );\n}\nclass BookListContainer extends Component {\n\n  componentDidMount() {\nthis.props.fetchBooks();\n  }\n\n  render() {\n    const { books, loading, error, onAddedToCart} = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return <BookList books={books}  onAddedToCart={onAddedToCart}/>\n  }\n}\n\n\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\n  return { books, loading, error };\n};\n\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\n    onAddedToCart: (id) => {\n      dispatch(bookAddedToCart(id))\n    }\n  }\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);\n","import BookList from './book-list';\n\nexport default BookList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport './shopping-cart-table.css';\nimport { bookAddedToCart, bookRemovedFromCart, AllBooksRemovedFromCart } from '../../actions';\n\nconst ShoppingCartTable = ({\n  items, \n  total, \n  onIncrease, \n  onDecrease, \n  onDelete\n}) => {\n  const renderRow = (item, idx) => {\n    const {id, title, count, total} = item;\n    return(\n      <tr key={id}>\n              <td>{idx + 1}</td>\n              <td>{title}</td>\n              <td>{count}</td>\n              <td>${total}</td>\n              <td>\n                <button\n                onClick={() => onDelete(id)} \n                 className=\"btn btn-outline-danger btn-sm float-right\">\n                  <i className=\"fa fa-trash-o\" />\n                </button>\n                <button \n                onClick={() => onIncrease(id)} \n                className=\"btn btn-outline-success btn-sm float-right\">\n                  <i className=\"fa fa-plus-circle\" />\n                </button>\n                <button \n                onClick={() => onDecrease(id)} \n                className=\"btn btn-outline-warning btn-sm float-right\">\n                  <i className=\"fa fa-minus-circle\" />\n                </button>\n              </td>\n            </tr>\n    )\n  }\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n{items.map(renderRow) }\n        <tbody>\n          \n        </tbody>\n      </table>\n\n      <div className=\"total\">\n        Total: {total}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ shoppingCart: {cartItems, orderTotal}}) => {\n  return {\n    items: cartItems,\n    total: orderTotal\n  };\n};\n\nconst mapDispatchToProps =  {\n    onIncrease: bookAddedToCart,\n    onDecrease: bookRemovedFromCart,\n    onDelete: AllBooksRemovedFromCart,\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;\n","import React from 'react';\nimport BookList from '../book-list';\nimport ShoppingCartTable from '../shopping-cart-table'\n\nconst HomePage = () => {\n    return (\n        <div>\n<BookList />\n<ShoppingCartTable/>\n</div>\n    )\n};\n\nexport default HomePage;","import React from 'react';\n\nconst CartPage = () => {\n    return <div>Cart Page</div>\n};\n\nexport default CartPage;","import ShopHeader from './shop-header';\n\nexport default ShopHeader;","import React from \"react\";\nimport \"./shop-header.css\";\nimport { Link } from \"react-router-dom\";\n\nconst ShopHeader = ({ numItems, total }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link to=\"/\">\n        <div className=\"logo text-dark\">ReStore</div>\n      </Link>\n      <Link to=\"/cart\">\n        <div className=\"shopping-cart\">\n          <i className=\"cart-icon fa fa-shopping-cart\" />\n          {numItems} items (${total})\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nexport default ShopHeader;\n","import App from './app';\n\nexport default App;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {HomePage, CartPage } from '../pages';\nimport ShopHeader from '../shop-header';\nimport './app.css';\n\n\nconst App = () => {\n    return (\n        <main role='main' className='container'>\n            <ShopHeader numItems={5} total={210} />\n    <Switch>\n        < Route path='/' \n        component={HomePage}\n        exact />\n\n        < Route path='/cart' \n        component={CartPage}\n        exact />\n    </Switch>\n    </main>\n    )\n};\n\nexport default (App);","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}","\nexport default class BookstoreService {\n\n  data = [\n    {\n      id: 1,\n      title: 'Production-Ready Microservices',\n      author: 'Susan J. Fowler',\n      price: 32,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\n    {\n      id: 2,\n      title: 'Release It!',\n      author: 'Michael T. Nygard',\n      price: 45,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\n  ];\n\n  getBooks() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.data)\n      }, 700);\n    });\n  }\n}\n","const updateBookList = (state, action) => {\n\n    if(state ===  undefined) {\n        return {\n            books: [],\n            loading: true,\n            error: null,\n        }\n    }\n  \n    switch(action.type) {\n        case 'FETCH_BOOKS_REQUESTED':\n            return {\n                books: [],\n                    loading: true,\n                    error: null\n            };\n        case 'FETCH_BOOKS_SUCCESS':\n            return {\n                books: action.payload,\n                    loading: false,\n                    error: null\n            };\n\n        case 'FETCH_BOOKS_FAILURE':\n            return {\n                books: [],\n                    loading: false,\n                    error: action.payload\n            };\n\n        default:\n            return state.bookList;\n    }\n};\n\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\n\n    if(item.count === 0) {\n        return [\n            ...cartItems.slice(0, idx),\n            ...cartItems.slice(idx + 1)\n        ];\n    }\n\n    if (idx === -1) {\n        return [\n            ...cartItems,\n            item\n        ];\n    };\n\n    return [\n        ...cartItems.slice(0, idx),\n        item,\n        ...cartItems.slice(idx + 1)\n    ];\n}\n\nconst updateCartItem = (book, item = {}, quantity) => {\n\n    const { \n        id = book.id, \n        count = 0, \n        title = book.title, \n        total = 0 \n    } = item;\n\n    return {\n        id,\n        title,\n        count: count + quantity,\n        total: total + quantity*book.price\n\n    }\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n\n    const { bookList: { books }, shoppingCart: { cartItems }} = state;\n    const book = books.find(({id}) => id === bookId);\n\n    const itemIndex = cartItems.findIndex(({\n        id\n    }) => id === bookId);\n    const item = cartItems[itemIndex];\n\n    const newItem = updateCartItem(book, item, quantity);\n    return {\n        orderTotal: 0,\n        cartItems: updateCartItems(cartItems, newItem, itemIndex)\n    };\n}\n\n\nconst updateShoppingCart = (state, action) => {\n\n    if(state ===  undefined) {\n        return {\n            cartItems: [],\n            orderTotal: 0\n        }\n    }\n\n    switch(action.type) {\n        \n        case 'BOOK_ADDED_TO_CART':\n            return updateOrder(state, action.payload, 1);\n\n        case 'BOOK_REMOVED_FROM_CART':\n            return updateOrder(state, action.payload, -1);\n\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\n            const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\n            return updateOrder(state, action.payload, -item.count);\n\n        default:\n            return state.shoppingCart;\n\n    }\n}\n\nexport default updateShoppingCart;","import updateBookList from './book-list';\nimport updateShoppingCart from './shopping-cart';\n\nconst reducer = (state, action) => {\n\n    return{\n        bookList: updateBookList(state, action),\n        shoppingCart: updateShoppingCart(state, action)\n    }\n}\n\nexport default reducer;","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <BookstoreServiceProvider value={bookstoreService}>\n                <Router>\n                    <App />\n                </Router>\n            </BookstoreServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}