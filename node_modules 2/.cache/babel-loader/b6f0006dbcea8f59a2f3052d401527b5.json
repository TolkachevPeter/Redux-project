{"ast":null,"code":"var _jsxFileName = \"/Users/p.i.t.e.p/Desktop/todol/redux-project/redux-project/src/components/book-list/book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport ErrorIndicator from '../error-indicator';\nimport { compose } from '../../utils';\nimport Spinner from '../spinner';\nimport './book-list.css';\n\nconst BookList = ({\n  books,\n  onAddedToCart\n}) => {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, books.map(book => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: book.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BookListItem, {\n      book: book,\n      onAddedToCart: () => onAddedToCart(book.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const {\n      books,\n      loading,\n      error,\n      onAddedToCart\n    } = this.props;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(ErrorIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(BookList, {\n      books: books,\n      onAddedToCart: onAddedToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = ({\n  books,\n  loading,\n  error\n}) => {\n  return {\n    books,\n    loading,\n    error\n  };\n};\n\nconst mapDispatchToProps = (dispatch, {\n  bookstoreService\n}) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\n    onAddedToCart: id => {\n      dispatch(bookAddedToCart(id));\n    }\n  };\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookListContainer);","map":{"version":3,"sources":["/Users/p.i.t.e.p/Desktop/todol/redux-project/redux-project/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","connect","withBookstoreService","fetchBooks","bookAddedToCart","ErrorIndicator","compose","Spinner","BookList","books","onAddedToCart","map","book","id","BookListContainer","componentDidMount","props","render","loading","error","mapStateToProps","mapDispatchToProps","dispatch","bookstoreService"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,eAA5C;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,iBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA8B;AAC7C,sBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAClB,wBACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAED,IAApB;AACA,MAAA,aAAa,EAAE,MAAMF,aAAa,CAACE,IAAI,CAACC,EAAN,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD,GARD,CAFJ,CADF;AAeD,CAhBD;;AAiBA,MAAMC,iBAAN,SAAgCf,SAAhC,CAA0C;AAExCgB,EAAAA,iBAAiB,GAAG;AACtB,SAAKC,KAAL,CAAWb,UAAX;AACG;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,KAAF;AAASS,MAAAA,OAAT;AAAkBC,MAAAA,KAAlB;AAAyBT,MAAAA;AAAzB,QAA0C,KAAKM,KAArD;;AAEA,QAAIE,OAAJ,EAAa;AACX,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIC,KAAJ,EAAW;AACT,0BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBAAO,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEV,KAAjB;AAAyB,MAAA,aAAa,EAAEC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAlBuC;;AAsB1C,MAAMU,eAAe,GAAG,CAAC;AAAEX,EAAAA,KAAF;AAASS,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AACrD,SAAO;AAAEV,IAAAA,KAAF;AAASS,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAP;AACD,CAFD;;AAIA,MAAME,kBAAkB,GAAG,CAACC,QAAD,EAAW;AAAEC,EAAAA;AAAF,CAAX,KAAoC;AAC7D,SAAO;AACLpB,IAAAA,UAAU,EAAEA,UAAU,CAACoB,gBAAD,EAAmBD,QAAnB,CADjB;AAELZ,IAAAA,aAAa,EAAGG,EAAD,IAAQ;AACrBS,MAAAA,QAAQ,CAAClB,eAAe,CAACS,EAAD,CAAhB,CAAR;AACD;AAJI,GAAP;AAMD,CAPD;;AASA,eAAeP,OAAO,CACpBJ,oBAAoB,EADA,EAEpBD,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAFa,CAAP,CAGbP,iBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport { connect } from 'react-redux';\n\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport ErrorIndicator from '../error-indicator';\nimport { compose } from '../../utils';\nimport Spinner from '../spinner';\nimport './book-list.css';\n\nconst BookList = ({ books, onAddedToCart }) => {\n  return (\n    <ul className=\"book-list\">\n      {\n        books.map((book) => {\n          return (\n            <li key={book.id}>\n              <BookListItem book={book}\n              onAddedToCart={() => onAddedToCart(book.id)}\n              />\n              </li>\n          )\n        })\n      }\n    </ul>\n  );\n}\nclass BookListContainer extends Component {\n\n  componentDidMount() {\nthis.props.fetchBooks();\n  }\n\n  render() {\n    const { books, loading, error, onAddedToCart} = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return <BookList books={books}  onAddedToCart={onAddedToCart}/>\n  }\n}\n\n\nconst mapStateToProps = ({ books, loading, error }) => {\n  return { books, loading, error };\n};\n\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\n    onAddedToCart: (id) => {\n      dispatch(bookAddedToCart(id))\n    }\n  }\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);\n"]},"metadata":{},"sourceType":"module"}